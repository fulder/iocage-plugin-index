freebsd_instance:
  image_family: freebsd-12-2
  cpu: 1
  memory: "1"

install_backuppc_task:
  requirements_script: pkg install -y jq
  install_script: |
    plugin_file=backuppc.json
    release=$(jq -r '.release' $plugin_file)
    name=$(jq '.name' $plugin_file)
    packagesite=$(jq '.packagesite' $plugin_file)
    fingerprints=$(jq -r '.fingerprints | keys[]' backuppc.json)
    plugin_repo=$(jq '.artifact' $plugin_file)

    pkg install -y git-lite
    mkdir plugin
    git clone ${plugin_archive} plugin
    pkg remove -y git-lite



    pkg_dir=/usr/local/test
    repos_dir="${pkg_dir}/repos"
    fingerprints_dir="${pkg_dir}/fingerprints"

    echo "Creating main repos dir: ${repos_dir}"
    mkdir -p $repos_dir
    export REPOS_DIR=$repos_dir

    pkg_conf_path="${repos_dir}/test.conf"
    echo "iocage-plugins: {" > $pkg_conf_path
    echo "url: $packagesite," >> $pkg_conf_path
    echo "signature_type: \"fingerprints\"," >> $pkg_conf_path
    echo "fingerprints \"${fingerprints_dir}\"," >> $pkg_conf_path
    echo "enabled: true" >> $pkg_conf_path
    echo } >> $pkg_conf_path

    echo "Created test pkg config file:"
    cat $pkg_conf_path

    trusted_fingerprints="$fingerprints_dir/trusted"
    mkdir -p "${trusted_fingerprints}"

    for repo_name in $fingerprints
    do
      repo_fingerprints=$(jq -rc '."fingerprints"."'${repo_name}'"[]' $plugin_file)

      repo_count=1
      echo $repo_fingerprints | while IFS='' read f
      do
        echo "Creating fingerprint file for repo:"
        echo $f

        function=$(echo $f | jq -r '.function')
        fingerprint=$(echo $f | jq -r '.fingerprint')
        file_path=${trusted_fingerprints}/${repo_name}_${repo_count}

        echo "Creating new fingerprint file: ${file_path}"

        echo "function: $function" > ${file_path}
        echo "fingerprint: $fingerprint" >> ${file_path}

        repo_count=$(expr $repo_count + 1)
      done
    done

    echo "Test install plugin pkgs for plugin: $name"
    pkgs=$(jq -r '.pkgs | join(" ")' $plugin_file)
    echo "Installing $name pkgs: $pkgs"
    pkg install -y $pkgs
